name: SonarCloud Analysis

on:
  push:
    branches:
      - master

jobs:
  build_and_analyze:
    name: Build and Analyze
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Create directories
        shell: powershell
        run: mkdir coverage; mkdir .\.sonar\scanner
      - name: Install SonarCloud Scanner
        shell: powershell
        run: dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Begin SonarCloud Analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner begin /k:"KostiaBohatyrov_MultSolutions" /o:"kostiabohatyrov" /d:sonar.token="$env:SONAR_TOKEN" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="coverage/coverageOne.xml,coverage/coverageTwo.xml"
      - name: Restore Solutions
        shell: powershell
        run: dotnet restore One/One.sln; dotnet restore Two/Two.sln
      - name: Build Solutions
        shell: powershell
        run: dotnet build One/One.sln --configuration Release --no-restore; dotnet build Two/Two.sln --configuration Release --no-restore
      - name: Test and Collect Coverage for One Solution
        shell: powershell
        run: dotnet test One/One.sln --configuration Release --no-build --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage/coverageOne.xml /p:coverlet.useRelativePaths=true
      
      - name: Test and Collect Coverage for Two Solution
        shell: powershell
        run: dotnet test Two/Two.sln --configuration Release --no-build --collect:"XPlat Code Coverage" /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage/coverageTwo.xml /p:coverlet.useRelativePaths=true
      
      - name: End SonarCloud Analysis
        shell: powershell
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="$env:SONAR_TOKEN"
