name: SonarCloud Analysis

on:
  push:
    branches:
      - master

jobs:
  sonarCloud:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Create coverage directory
        run: mkdir coverage

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud Analysis
        run: |
          dotnet sonarscanner begin /k:"KostiaBohatyrov_MultSolutions" /n:"YMultSolutions" \
            /d:sonar.organization="kostiabohatyrov" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.cs.opencover.reportsPaths="coverage/coverageOne.xml,coverage/coverageTwo.xml"

      - name: Restore Solutions
        run: |
          dotnet restore One/One.sln
          dotnet restore Two/Two.sln

      - name: Build Solutions
        run: |
          dotnet build One/One.sln --configuration Release --no-restore
          dotnet build Two/Two.sln --configuration Release --no-restore

      - name: Test and collect coverage for One solution
        run: dotnet test One/One.sln --configuration Release --no-build --collect:"XPlat Code Coverage" \
          /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage/coverageOne.xml

      - name: Test and collect coverage for Two solution
        run: dotnet test Two/Two.sln --configuration Release --no-build --collect:"XPlat Code Coverage" \
          /p:CoverletOutputFormat=cobertura /p:CoverletOutput=coverage/coverageTwo.xml

      - name: End SonarCloud Analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
